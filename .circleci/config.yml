# Golang CircleCI 2.0 configuration
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.3
    environment:
      - DEP_VERSION: 0.5.0
    working_directory: /go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - checkout
      - run: go version
      - run: go env
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run: sudo chown circleci:circleci /go/bin
      - run: make tools
      - run: make lint
      - run:
          name: cov install deps
          command: |
            go get golang.org/x/tools/cmd/cover
            go get github.com/mattn/goveralls
            go get github.com/modocache/gover
            go install github.com/mattn/goveralls
            go install github.com/modocache/gover
      - run: go test -v github.com/SAP/cloud-mta-build-tool/cmd -coverprofile=cmd.coverprofile
      - run: go test -v github.com/SAP/cloud-mta-build-tool/internal -coverprofile=internal.coverprofile
      - run: go test -v github.com/SAP/cloud-mta-build-tool/integration -coverprofile=integration.coverprofile
      - run: go test -v github.com/SAP/cloud-mta-build-tool -coverprofile=mbt.coverprofile
      - run: gover
      - run: goveralls -v -service=circle-ci -coverprofile=gover.coverprofile -repotoken $COVERALLS_TOKEN

  integration_test:
    docker:
      - image: shimit/mbt_multi:0.1.0
    working_directory: /go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: cf login -a $CF_API -o $ORG -s $SPACE -u $TECH_USER -p $TECH_PASS
      - run: cd integration &&  go test -tags=integration

workflows:
  version: 2
  build_integration:
    jobs:
      - build

  integration-test:
    jobs:
      - integration_test:
          filters:
            branches:
              only: master
